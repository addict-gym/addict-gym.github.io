{"version":3,"file":"178-e0732ce45f9cefc7da78.js","mappings":"qMAUMA,EAAW,kBACf,gBAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,IAAD,CAAcC,MAAM,QAApB,YACA,gBAAC,IAAD,CACEC,GAAI,CACFC,GAAI,EACJC,WAAY,IAHhB,0GAWEC,EAAY,kBAChB,gBAAC,KAAD,CAAMP,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,EAAAM,EAAD,CACEC,IAAI,qCACJC,IAAI,WACJC,OAAO,YAHT,wBAyIJ,UAjIwD,WACtD,IAAQC,GAAkBC,EAAAA,EAAAA,gBAAe,cAAjCD,cAcR,OACE,gBAAC,IAAD,CAASE,GAAG,YACV,gBAAC,KAAD,CACEC,WAAS,EACTC,eAAe,gBACfZ,GAAI,CACFa,QAAS,CACPf,GAAI,UAIR,gBAACH,EAAD,MACA,gBAACQ,EAAD,OAEF,gBAAC,KAAD,CACEQ,WAAS,EACTC,eAAe,gBACfZ,GAAI,CACFa,QAAS,CACPhB,GAAI,OACJC,GAAI,UAIR,gBAACK,EAAD,MACA,gBAACR,EAAD,OAGF,gBAAC,KAAD,CACEgB,WAAS,EACTG,QAAS,EACTd,GAAI,CACFe,UAAW,KAGZ,CACC,CACEC,aAAc,0BACdV,IAAK,2BAEP,CACEU,aAAc,0BACdV,IACE,4CAEJ,CACEU,aAAc,0BACdV,IACE,8DAEJW,KAAI,WAAwBC,GAAO,IAA5BF,EAA2B,EAA3BA,aAAcV,EAAa,EAAbA,IACba,EAAoBX,EAAcY,MAAMC,MAC9C,qBAAGC,MAAkBN,eAAiBA,KADhCG,gBAIR,OACE,gBAAC,KAAD,CACEvB,MAAI,EACJ2B,IAAKL,EACLrB,GAAI,GACJ2B,GAAI,EACJxB,GAAI,CACFyB,GAAI,IAGN,gBAAC,EAAAC,EAAD,CAAaC,MAAOR,EAAiBb,IAAKA,IAC1C,gBAAC,IAAD,CACEN,GAAI,CACFyB,GAAI,IAGLnB,QAOX,gBAAC,KAAD,CACEK,WAAS,EACTG,QAAS,EACTd,GAAI,CACFyB,GAAI,IAGL,CACC,0BACA,0BACA,0BACA,2BACAR,KAAI,SAACD,EAAcE,GACnB,IAAQC,EAAoBX,EAAcY,MAAMC,MAC9C,qBAAGC,MAAkBN,eAAiBA,KADhCG,gBAIR,OACE,gBAAC,KAAD,CACEvB,MAAI,EACJ2B,IAAKL,EACLpB,GAAI,EACJD,GAAI,EACJG,GAAI,CACFyB,GAAI,IAGN,gBAAC,EAAAC,EAAD,CAAaC,MAAOR,EAAiBb,IAAG,YAAaY,EAAI,a","sources":["webpack://addict-gym.com/./src/components/sections/facility.tsx"],"sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { StaticImage, GatsbyImage } from 'gatsby-plugin-image';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Section from '../section';\nimport SectionTitle from '../section-title';\n\ninterface SectionFacilityProps {}\n\nconst GridText = () => (\n  <Grid item xs={12} md={5}>\n    <SectionTitle align='left'>Facility</SectionTitle>\n    <Typography\n      sx={{\n        mb: 4,\n        lineHeight: 2\n      }}\n    >\n      広さ32平米を超える広いワークアウトスペースで、マンツーマンでのパーソナルトレーニングを受けることができます。もちろん、ご家族や友人同士でのグループレッスン、ヨガやダンスなど幅広くご利用いただけます。\n    </Typography>\n  </Grid>\n);\n\nconst GridImage = () => (\n  <Grid item xs={12} md={6}>\n    <StaticImage\n      src='../../images/1200x800-facility.jpg'\n      alt='Facility'\n      layout='fullWidth'\n    />\n  </Grid>\n);\n\nconst SectionFacility: React.FC<SectionFacilityProps> = () => {\n  const { allImageSharp } = useStaticQuery(graphql`\n    query {\n      allImageSharp {\n        nodes {\n          id\n          gatsbyImageData\n          fluid {\n            originalName\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Section id='facility'>\n      <Grid\n        container\n        justifyContent='space-between'\n        sx={{\n          display: {\n            md: 'none'\n          }\n        }}\n      >\n        <GridText />\n        <GridImage />\n      </Grid>\n      <Grid\n        container\n        justifyContent='space-between'\n        sx={{\n          display: {\n            xs: 'none',\n            md: 'flex'\n          }\n        }}\n      >\n        <GridImage />\n        <GridText />\n      </Grid>\n\n      <Grid\n        container\n        spacing={3}\n        sx={{\n          marginTop: 12\n        }}\n      >\n        {[\n          {\n            originalName: '900x600-facility-01.jpg',\n            alt: '広さ32平米を超える広いワークアウトスペース。'\n          },\n          {\n            originalName: '900x600-facility-02.jpg',\n            alt:\n              '2面窓となっており風通しも良いため、明るい雰囲気でご利用いただくことができます。'\n          },\n          {\n            originalName: '900x600-facility-03.jpg',\n            alt:\n              'プロジェクターなどの設備もございますので、映像を投影しながらのダンスレッスンやヨガスタジオとしても利用が可能です。'\n          }\n        ].map(({ originalName, alt }, i) => {\n          const { gatsbyImageData } = allImageSharp.nodes.find(\n            ({ fluid }) => fluid.originalName === originalName\n          );\n\n          return (\n            <Grid\n              item\n              key={i}\n              xs={12}\n              sm={4}\n              sx={{\n                mt: 3\n              }}\n            >\n              <GatsbyImage image={gatsbyImageData} alt={alt} />\n              <Typography\n                sx={{\n                  mt: 2\n                }}\n              >\n                {alt}\n              </Typography>\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      <Grid\n        container\n        spacing={3}\n        sx={{\n          mt: 3\n        }}\n      >\n        {[\n          '600x600-facility-04.jpg',\n          '600x600-facility-05.jpg',\n          '600x600-facility-06.jpg',\n          '600x600-facility-07.jpg'\n        ].map((originalName, i) => {\n          const { gatsbyImageData } = allImageSharp.nodes.find(\n            ({ fluid }) => fluid.originalName === originalName\n          );\n\n          return (\n            <Grid\n              item\n              key={i}\n              md={3}\n              xs={6}\n              sx={{\n                mt: 3\n              }}\n            >\n              <GatsbyImage image={gatsbyImageData} alt={`Facility${i + 1}`} />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Section>\n  );\n};\n\nexport default SectionFacility;\n"],"names":["GridText","item","xs","md","align","sx","mb","lineHeight","GridImage","S","src","alt","layout","allImageSharp","useStaticQuery","id","container","justifyContent","display","spacing","marginTop","originalName","map","i","gatsbyImageData","nodes","find","fluid","key","sm","mt","G","image"],"sourceRoot":""}